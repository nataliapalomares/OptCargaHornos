/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package optimizarcargahornos;

import java.awt.CardLayout;
import java.io.File;
import java.util.List;
import java.util.stream.IntStream;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Natalia
 */
public class OptimizarCargaVentana extends javax.swing.JFrame {

    /**
     * Creates new form OptimizarCargaVentana
     */
    final JFileChooser fc = new JFileChooser();
    Algoritmos alg = new Algoritmos();
    boolean datosHorno;
    boolean datosSets;
    boolean datosPedidos;

    public OptimizarCargaVentana() {
        initComponents();
        datosHorno = false;
        datosSets = false;
        datosPedidos = false;
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.csv", "csv");
        fc.setFileFilter(filter);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tipoArchivo = new javax.swing.ButtonGroup();
        vistaResultados = new javax.swing.ButtonGroup();
        vistaSets = new javax.swing.ButtonGroup();
        ventanaContenedora = new javax.swing.JPanel();
        inicio = new javax.swing.JPanel();
        TituloInicio = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        startButton = new javax.swing.JButton();
        Pasos = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cargarDatos = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        fileName = new javax.swing.JTextField();
        examinateFile = new javax.swing.JButton();
        typeOvenRadioButton = new javax.swing.JRadioButton();
        typeSetsRadioButton = new javax.swing.JRadioButton();
        typePedidosRadioButton = new javax.swing.JRadioButton();
        nextCargaButton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        loadFileDataButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelDatHornos = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        maxVolume = new javax.swing.JTextField();
        numberWagons = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        maxWeight = new javax.swing.JTextField();
        numberCompartments = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        tableCompartments = new javax.swing.JScrollPane();
        compartmentsTable = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        panelDatSets = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        tableSets = new javax.swing.JScrollPane();
        setsTable = new javax.swing.JTable();
        panelDatProds = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        tableProductos = new javax.swing.JScrollPane();
        productosTable = new javax.swing.JTable();
        panelDatPiezas = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        tablePiezas = new javax.swing.JScrollPane();
        piecesTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tablePedidos = new javax.swing.JTable();
        confParametros = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        clientFactorsPanel = new javax.swing.JPanel();
        demandLabel = new javax.swing.JLabel();
        weightLabel = new javax.swing.JLabel();
        volumeLabel = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        maxTimeSpinner = new javax.swing.JSpinner();
        weightSpinner = new javax.swing.JSpinner();
        volumeSpinner = new javax.swing.JSpinner();
        jLabel45 = new javax.swing.JLabel();
        demandSpinner = new javax.swing.JSpinner();
        equalFactorsCheckBox = new javax.swing.JCheckBox();
        jSeparator2 = new javax.swing.JSeparator();
        graspVariables = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        pobSizeGraspSpinner = new javax.swing.JSpinner();
        jLabel24 = new javax.swing.JLabel();
        alphaGraspSpinner = new javax.swing.JSpinner();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        tasaRecombLabel = new javax.swing.JLabel();
        tasaRecombSpinner = new javax.swing.JSpinner();
        probRecombLabel = new javax.swing.JLabel();
        probRecombSpinner = new javax.swing.JSpinner();
        tasaMutLabel = new javax.swing.JLabel();
        tasaMutSpinner = new javax.swing.JSpinner();
        jPanel8 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        intervalGenSpinner = new javax.swing.JSpinner();
        jLabel28 = new javax.swing.JLabel();
        porcAplicationSpinner = new javax.swing.JSpinner();
        jLabel29 = new javax.swing.JLabel();
        neighboursVisitSpinner = new javax.swing.JSpinner();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel9 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        maxSinMejoraLabel = new javax.swing.JLabel();
        maxSinMejoraSpinner = new javax.swing.JSpinner();
        porcConservarLabel = new javax.swing.JLabel();
        porcConservarSpinner = new javax.swing.JSpinner();
        jPanel10 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        maxIterationSpinner = new javax.swing.JSpinner();
        restoreButton = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        tCasamientoLabel = new javax.swing.JLabel();
        pRecombGLabel = new javax.swing.JLabel();
        tCasamientoSpinner = new javax.swing.JSpinner();
        pRecombGSpinner = new javax.swing.JSpinner();
        jPanel13 = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        tMutacionGSpinner = new javax.swing.JSpinner();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        porcConservarGSpinner = new javax.swing.JSpinner();
        jPanel14 = new javax.swing.JPanel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        maxIterationsGSpinner = new javax.swing.JSpinner();
        jLabel41 = new javax.swing.JLabel();
        maxIteratNoChangeSpinner = new javax.swing.JSpinner();
        executeButton = new javax.swing.JButton();
        backParametersButton = new javax.swing.JButton();
        executionProgressBar = new javax.swing.JProgressBar();
        jLabel42 = new javax.swing.JLabel();
        resultadosPiezas = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        setsAtendidosRadioButton = new javax.swing.JRadioButton();
        piezasRadioButton = new javax.swing.JRadioButton();
        jLabel44 = new javax.swing.JLabel();
        resultadosBackButton = new javax.swing.JToggleButton();
        panelTablas = new javax.swing.JPanel();
        resultPiezasAtendPanel = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        solucionMemeTable = new javax.swing.JTable();
        jPanel24 = new javax.swing.JPanel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        fitMemePiezasField = new javax.swing.JTextField();
        volumeMemePiezas = new javax.swing.JTextField();
        weightMemePiezas = new javax.swing.JTextField();
        jPanel25 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        solucionGenTable = new javax.swing.JTable();
        jPanel26 = new javax.swing.JPanel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        fitGenPiezasText = new javax.swing.JTextField();
        volumeGenPiezas = new javax.swing.JTextField();
        weightGenPiezas = new javax.swing.JTextField();
        resultSetAtendidosPanel = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel15 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        piezasMAtendTable = new javax.swing.JTable();
        jPanel16 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        productosMAtendTable = new javax.swing.JTable();
        jPanel17 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        setsMAtendTable = new javax.swing.JTable();
        jPanel29 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel18 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        piezasGAtendTable = new javax.swing.JTable();
        jPanel19 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        productosGAtendTable = new javax.swing.JTable();
        jPanel20 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        setsGAtendTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Optimizacion de carga de hornos");
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        ventanaContenedora.setBackground(new java.awt.Color(255, 255, 255));
        ventanaContenedora.setPreferredSize(new java.awt.Dimension(1000, 650));
        ventanaContenedora.setLayout(new java.awt.CardLayout());

        inicio.setBackground(new java.awt.Color(255, 255, 255));
        inicio.setPreferredSize(new java.awt.Dimension(1000, 625));

        TituloInicio.setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 153));
        jLabel6.setText("EN LA CARGA DE HORNOS");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 153));
        jLabel5.setText("OPTIMIZACIÓN DE LA SELECCIÓN DE PIEZAS");

        javax.swing.GroupLayout TituloInicioLayout = new javax.swing.GroupLayout(TituloInicio);
        TituloInicio.setLayout(TituloInicioLayout);
        TituloInicioLayout.setHorizontalGroup(
            TituloInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TituloInicioLayout.createSequentialGroup()
                .addGroup(TituloInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TituloInicioLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5))
                    .addGroup(TituloInicioLayout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addComponent(jLabel6)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        TituloInicioLayout.setVerticalGroup(
            TituloInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TituloInicioLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addContainerGap())
        );

        startButton.setText("Inicio");
        startButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cargarDatosPan(evt);
            }
        });
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        Pasos.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("1. Cargar archivos de datos");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("2. Establecer los valores de los parámetros");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("3. Ver resultados");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setText("Pasos:");

        javax.swing.GroupLayout PasosLayout = new javax.swing.GroupLayout(Pasos);
        Pasos.setLayout(PasosLayout);
        PasosLayout.setHorizontalGroup(
            PasosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PasosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PasosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        PasosLayout.setVerticalGroup(
            PasosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PasosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout inicioLayout = new javax.swing.GroupLayout(inicio);
        inicio.setLayout(inicioLayout);
        inicioLayout.setHorizontalGroup(
            inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inicioLayout.createSequentialGroup()
                .addGroup(inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inicioLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(TituloInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inicioLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inicioLayout.createSequentialGroup()
                                .addComponent(Pasos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(194, 194, 194))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inicioLayout.createSequentialGroup()
                                .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 682, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(91, 91, 91)))))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        inicioLayout.setVerticalGroup(
            inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inicioLayout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(TituloInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87)
                .addComponent(Pasos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(69, Short.MAX_VALUE))
        );

        ventanaContenedora.add(inicio, "inicio");

        cargarDatos.setBackground(new java.awt.Color(255, 255, 255));
        cargarDatos.setPreferredSize(new java.awt.Dimension(1000, 625));

        jSplitPane1.setBackground(new java.awt.Color(255, 255, 255));
        jSplitPane1.setDividerSize(1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setMinimumSize(new java.awt.Dimension(263, 100));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 51, 153));
        jLabel7.setText("Cargar de archivos");
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Archivo de datos:");

        fileName.setEditable(false);

        examinateFile.setText("Examinar");
        examinateFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                examinateFileMouseClicked(evt);
            }
        });

        typeOvenRadioButton.setBackground(new java.awt.Color(255, 255, 255));
        tipoArchivo.add(typeOvenRadioButton);
        typeOvenRadioButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        typeOvenRadioButton.setSelected(true);
        typeOvenRadioButton.setText("Horno");

        typeSetsRadioButton.setBackground(new java.awt.Color(255, 255, 255));
        tipoArchivo.add(typeSetsRadioButton);
        typeSetsRadioButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        typeSetsRadioButton.setText("Sets, productos y piezas");

        typePedidosRadioButton.setBackground(new java.awt.Color(255, 255, 255));
        tipoArchivo.add(typePedidosRadioButton);
        typePedidosRadioButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        typePedidosRadioButton.setText("Pedidos");
        typePedidosRadioButton.setEnabled(false);

        nextCargaButton.setText("Siguiente");
        nextCargaButton.setEnabled(false);
        nextCargaButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nextCargaButtonMouseClicked(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Tipo de archivo:");

        loadFileDataButton.setText("Cargar archivo");
        loadFileDataButton.setEnabled(false);
        loadFileDataButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loadFileDataButtonMouseClicked(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 51, 153));
        jLabel10.setText("de datos");

        jButton2.setText("Anterior");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(typeSetsRadioButton)
                                .addComponent(typeOvenRadioButton)
                                .addComponent(typePedidosRadioButton))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8)
                                .addComponent(fileName, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(examinateFile, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(loadFileDataButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel10)
                        .addGap(81, 81, 81))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(nextCargaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addGap(26, 26, 26)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(examinateFile, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(typeOvenRadioButton)
                .addGap(18, 18, 18)
                .addComponent(typeSetsRadioButton)
                .addGap(18, 18, 18)
                .addComponent(typePedidosRadioButton)
                .addGap(29, 29, 29)
                .addComponent(loadFileDataButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nextCargaButton, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jSplitPane1.setLeftComponent(jPanel2);

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));

        panelDatHornos.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("HORNO");

        jLabel12.setLabelFor(maxVolume);
        jLabel12.setText("Volumen máximo");

        jLabel13.setLabelFor(numberWagons);
        jLabel13.setText("Número de vagonetas");

        maxVolume.setEditable(false);
        maxVolume.setBackground(new java.awt.Color(255, 255, 255));
        maxVolume.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        maxVolume.setDisabledTextColor(new java.awt.Color(0, 51, 51));
        maxVolume.setEnabled(false);

        numberWagons.setEditable(false);
        numberWagons.setBackground(new java.awt.Color(255, 255, 255));
        numberWagons.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        numberWagons.setDisabledTextColor(new java.awt.Color(0, 51, 51));
        numberWagons.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(maxVolume, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(numberWagons, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(maxVolume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(numberWagons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setText("VAGONETAS");

        jLabel15.setLabelFor(maxWeight);
        jLabel15.setText("Peso máximo");

        jLabel16.setLabelFor(numberCompartments);
        jLabel16.setText("Número de compartimentos");

        maxWeight.setEditable(false);
        maxWeight.setBackground(new java.awt.Color(255, 255, 255));
        maxWeight.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        maxWeight.setDisabledTextColor(new java.awt.Color(0, 51, 51));
        maxWeight.setEnabled(false);

        numberCompartments.setEditable(false);
        numberCompartments.setBackground(new java.awt.Color(255, 255, 255));
        numberCompartments.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        numberCompartments.setDisabledTextColor(new java.awt.Color(0, 51, 51));
        numberCompartments.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(maxWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(numberCompartments, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel15)
                    .addComponent(maxWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(numberCompartments, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setMaximumSize(new java.awt.Dimension(417, 521));
        jPanel4.setPreferredSize(new java.awt.Dimension(400, 521));

        compartmentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Ancho (m)", "Largo (m)", "Alto (m)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        compartmentsTable.getTableHeader().setReorderingAllowed(false);
        tableCompartments.setViewportView(compartmentsTable);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setText("COMPARTIMENTOS");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(tableCompartments, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tableCompartments, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelDatHornosLayout = new javax.swing.GroupLayout(panelDatHornos);
        panelDatHornos.setLayout(panelDatHornosLayout);
        panelDatHornosLayout.setHorizontalGroup(
            panelDatHornosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatHornosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDatHornosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelDatHornosLayout.setVerticalGroup(
            panelDatHornosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatHornosLayout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDatHornosLayout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Horno y vagonetas", panelDatHornos);

        panelDatSets.setBackground(new java.awt.Color(255, 255, 255));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setText("SETS");

        setsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Modelo", "Color", "Lista de productos", "Stock"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        setsTable.getTableHeader().setReorderingAllowed(false);
        tableSets.setViewportView(setsTable);

        javax.swing.GroupLayout panelDatSetsLayout = new javax.swing.GroupLayout(panelDatSets);
        panelDatSets.setLayout(panelDatSetsLayout);
        panelDatSetsLayout.setHorizontalGroup(
            panelDatSetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatSetsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDatSetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDatSetsLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(tableSets, javax.swing.GroupLayout.DEFAULT_SIZE, 709, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelDatSetsLayout.setVerticalGroup(
            panelDatSetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatSetsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tableSets, javax.swing.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Sets", panelDatSets);

        panelDatProds.setBackground(new java.awt.Color(255, 255, 255));

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel19.setText("PRODUCTOS");

        productosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Tipo", "Modelo", "Color", "Lista de piezas", "Stock"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        productosTable.getTableHeader().setReorderingAllowed(false);
        tableProductos.setViewportView(productosTable);

        javax.swing.GroupLayout panelDatProdsLayout = new javax.swing.GroupLayout(panelDatProds);
        panelDatProds.setLayout(panelDatProdsLayout);
        panelDatProdsLayout.setHorizontalGroup(
            panelDatProdsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatProdsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDatProdsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDatProdsLayout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(0, 634, Short.MAX_VALUE))
                    .addComponent(tableProductos))
                .addContainerGap())
        );
        panelDatProdsLayout.setVerticalGroup(
            panelDatProdsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatProdsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tableProductos, javax.swing.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Productos", panelDatProds);

        panelDatPiezas.setBackground(new java.awt.Color(255, 255, 255));

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel20.setText("PIEZAS");

        piecesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Tipo", "Modelo", "Color", "Alto (m)", "Ancho (m)", "Largo (m)", "Peso (kg)", "Stock", "Por hornear"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        piecesTable.getTableHeader().setReorderingAllowed(false);
        tablePiezas.setViewportView(piecesTable);

        javax.swing.GroupLayout panelDatPiezasLayout = new javax.swing.GroupLayout(panelDatPiezas);
        panelDatPiezas.setLayout(panelDatPiezasLayout);
        panelDatPiezasLayout.setHorizontalGroup(
            panelDatPiezasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatPiezasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDatPiezasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDatPiezasLayout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addGap(0, 665, Short.MAX_VALUE))
                    .addComponent(tablePiezas))
                .addContainerGap())
        );
        panelDatPiezasLayout.setVerticalGroup(
            panelDatPiezasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatPiezasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tablePiezas, javax.swing.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Piezas", panelDatPiezas);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel21.setText("PEDIDOS");

        tablePedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Set pedido", "Prioridad cliente", "Fecha de entrega", "Cantidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablePedidos.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(tablePedidos);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(0, 654, Short.MAX_VALUE))
                    .addComponent(jScrollPane5))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Pedidos", jPanel5);

        jSplitPane1.setRightComponent(jTabbedPane1);

        javax.swing.GroupLayout cargarDatosLayout = new javax.swing.GroupLayout(cargarDatos);
        cargarDatos.setLayout(cargarDatosLayout);
        cargarDatosLayout.setHorizontalGroup(
            cargarDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        cargarDatosLayout.setVerticalGroup(
            cargarDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );

        ventanaContenedora.add(cargarDatos, "cargarDatos");

        confParametros.setBackground(new java.awt.Color(255, 255, 255));
        confParametros.setForeground(new java.awt.Color(0, 51, 153));

        jLabel22.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 51, 153));
        jLabel22.setText("Configuración de parámetros");

        clientFactorsPanel.setBackground(new java.awt.Color(255, 255, 255));
        clientFactorsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "FACTORES CLIENTE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        demandLabel.setText("Demanda");

        weightLabel.setText("Peso");

        volumeLabel.setText("Volumen");

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel32.setText("Tiempo máximo de ejecución (min)");

        maxTimeSpinner.setModel(new javax.swing.SpinnerNumberModel(5, 1, 20, 1));

        weightSpinner.setModel(new javax.swing.SpinnerNumberModel(0.3d, 0.0d, 1.0d, 0.01d));

        volumeSpinner.setModel(new javax.swing.SpinnerNumberModel(0.3d, 0.0d, 1.0d, 0.01d));

        jLabel45.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel45.setText("Factores de priorización");

        demandSpinner.setModel(new javax.swing.SpinnerNumberModel(0.4d, 0.0d, 1.0d, 0.01d));

        equalFactorsCheckBox.setBackground(new java.awt.Color(255, 255, 255));
        equalFactorsCheckBox.setText("Igualar todos los factores de priorización");
        equalFactorsCheckBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                equalFactorsCheckBoxStateChanged(evt);
            }
        });

        javax.swing.GroupLayout clientFactorsPanelLayout = new javax.swing.GroupLayout(clientFactorsPanel);
        clientFactorsPanel.setLayout(clientFactorsPanelLayout);
        clientFactorsPanelLayout.setHorizontalGroup(
            clientFactorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clientFactorsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(clientFactorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(clientFactorsPanelLayout.createSequentialGroup()
                        .addComponent(jLabel32)
                        .addGap(18, 28, Short.MAX_VALUE)
                        .addComponent(maxTimeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel45)
                    .addGroup(clientFactorsPanelLayout.createSequentialGroup()
                        .addGroup(clientFactorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(demandSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(demandLabel))
                        .addGap(41, 41, 41)
                        .addGroup(clientFactorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(weightSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(weightLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(clientFactorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(volumeLabel)
                            .addComponent(volumeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(equalFactorsCheckBox))
                .addContainerGap())
        );
        clientFactorsPanelLayout.setVerticalGroup(
            clientFactorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clientFactorsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel45)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(clientFactorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(demandLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(weightLabel)
                    .addComponent(volumeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(clientFactorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(demandSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(weightSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(volumeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(equalFactorsCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(clientFactorsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(maxTimeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        graspVariables.setBackground(new java.awt.Color(255, 255, 255));
        graspVariables.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "GRASP", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel23.setText("Tamaño de población");

        pobSizeGraspSpinner.setModel(new javax.swing.SpinnerNumberModel(7500, 500, 7500, 500));

        jLabel24.setText("Alfa");

        alphaGraspSpinner.setModel(new javax.swing.SpinnerNumberModel(0.4d, 0.0d, 1.0d, 0.01d));

        javax.swing.GroupLayout graspVariablesLayout = new javax.swing.GroupLayout(graspVariables);
        graspVariables.setLayout(graspVariablesLayout);
        graspVariablesLayout.setHorizontalGroup(
            graspVariablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(graspVariablesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(graspVariablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(graspVariablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pobSizeGraspSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                    .addComponent(alphaGraspSpinner))
                .addContainerGap())
        );
        graspVariablesLayout.setVerticalGroup(
            graspVariablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(graspVariablesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(graspVariablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(pobSizeGraspSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(graspVariablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(alphaGraspSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "MEMÉTICO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel25.setText("Generación de una nueva población");

        tasaRecombLabel.setLabelFor(tasaRecombSpinner);
        tasaRecombLabel.setText("Tasa de recombinación");

        tasaRecombSpinner.setModel(new javax.swing.SpinnerNumberModel(0.65d, 0.0d, 1.0d, 0.05d));

        probRecombLabel.setLabelFor(probRecombSpinner);
        probRecombLabel.setText("Prob. recombinación uniforme");

        probRecombSpinner.setModel(new javax.swing.SpinnerNumberModel(0.7d, 0.02d, 0.8d, 0.05d));

        tasaMutLabel.setLabelFor(tasaMutSpinner);
        tasaMutLabel.setText("Tasa de mutación");

        tasaMutSpinner.setModel(new javax.swing.SpinnerNumberModel(0.06d, 0.0d, 0.13d, 0.01d));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tasaRecombLabel)
                            .addComponent(probRecombLabel)
                            .addComponent(tasaMutLabel))
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(44, 45, Short.MAX_VALUE)
                                .addComponent(tasaRecombSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(probRecombSpinner)
                                    .addComponent(tasaMutSpinner))))))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tasaRecombLabel)
                    .addComponent(tasaRecombSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(probRecombLabel)
                    .addComponent(probRecombSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tasaMutLabel)
                    .addComponent(tasaMutSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel26.setText("Búsqueda local");

        jLabel27.setText("Intervalo de generaciones");

        intervalGenSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 100, 1));

        jLabel28.setText("% aplicación");

        porcAplicationSpinner.setModel(new javax.swing.SpinnerNumberModel(0.05d, 0.0d, 0.13d, 0.01d));

        jLabel29.setText("Vecinos visitados por búsqueda");

        neighboursVisitSpinner.setModel(new javax.swing.SpinnerNumberModel(100, 0, 200, 1));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel26)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27)
                            .addComponent(jLabel28)
                            .addComponent(jLabel29))
                        .addGap(67, 67, 67)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(intervalGenSpinner)
                            .addComponent(porcAplicationSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                            .addComponent(neighboursVisitSpinner))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(intervalGenSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(porcAplicationSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(neighboursVisitSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel30.setText("Restauración de la población");

        maxSinMejoraLabel.setLabelFor(maxSinMejoraSpinner);
        maxSinMejoraLabel.setText("Máx. iteraciones sin mejora");

        maxSinMejoraSpinner.setModel(new javax.swing.SpinnerNumberModel(500, 10, 1000, 10));

        porcConservarLabel.setLabelFor(porcConservarSpinner);
        porcConservarLabel.setText("% a conservar");

        porcConservarSpinner.setModel(new javax.swing.SpinnerNumberModel(0.07d, 0.01d, 0.1d, 0.01d));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel30)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(maxSinMejoraLabel)
                            .addComponent(porcConservarLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(porcConservarSpinner)
                            .addComponent(maxSinMejoraSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maxSinMejoraLabel)
                    .addComponent(maxSinMejoraSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(porcConservarLabel)
                    .addComponent(porcConservarSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel31.setText("Condiciones de parada");

        jLabel33.setText("Máx. de iteraciones");

        maxIterationSpinner.setModel(new javax.swing.SpinnerNumberModel(1000, 10, 10000, 10));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel31)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel33)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(maxIterationSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(maxIterationSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        restoreButton.setText("Restaurar valores");
        restoreButton.setToolTipText("Regresar a valores predeterminados");
        restoreButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                restoreButtonMouseClicked(evt);
            }
        });

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "GENÉTICO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));

        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel34.setText("Casamiento");

        tCasamientoLabel.setLabelFor(tCasamientoSpinner);
        tCasamientoLabel.setText("Tasa de casamiento");

        pRecombGLabel.setLabelFor(pRecombGSpinner);
        pRecombGLabel.setText("Prob. recombinación uniforme");

        tCasamientoSpinner.setModel(new javax.swing.SpinnerNumberModel(0.65d, 0.0d, 1.0d, 0.01d));

        pRecombGSpinner.setModel(new javax.swing.SpinnerNumberModel(0.7d, 0.2d, 0.8d, 0.05d));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel34)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tCasamientoLabel)
                            .addComponent(pRecombGLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pRecombGSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                            .addComponent(tCasamientoSpinner))))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel34)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tCasamientoLabel)
                    .addComponent(tCasamientoSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pRecombGLabel)
                    .addComponent(pRecombGSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel35.setText("Mutación");

        jLabel36.setText("Tasa de mutación");

        tMutacionGSpinner.setModel(new javax.swing.SpinnerNumberModel(0.07d, 0.01d, 0.13d, 0.01d));

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel37.setText("Depuración de la población");

        jLabel38.setText("% a conservar");

        porcConservarGSpinner.setModel(new javax.swing.SpinnerNumberModel(0.1d, 0.01d, 0.1d, 0.01d));

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel35)
                            .addComponent(jLabel37))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel36)
                            .addComponent(jLabel38))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(porcConservarGSpinner)
                            .addComponent(tMutacionGSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel35)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(tMutacionGSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel37)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(porcConservarGSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));

        jLabel39.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel39.setText("Condiciones de parada");

        jLabel40.setText("Máx. de iteraciones");

        maxIterationsGSpinner.setModel(new javax.swing.SpinnerNumberModel(1000, 10, 10000, 10));

        jLabel41.setText("Máx. iteraciones sin mejoras");

        maxIteratNoChangeSpinner.setModel(new javax.swing.SpinnerNumberModel(500, 10, 1000, 10));

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel39)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel40)
                            .addComponent(jLabel41))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(maxIteratNoChangeSpinner)
                            .addComponent(maxIterationsGSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel39)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(maxIterationsGSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(maxIteratNoChangeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        executeButton.setText("Ejecutar");
        executeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                executeButtonMouseClicked(evt);
            }
        });

        backParametersButton.setText("Regresar");
        backParametersButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backParametersButtonMouseClicked(evt);
            }
        });

        executionProgressBar.setToolTipText("");
        executionProgressBar.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                executionProgressBarStateChanged(evt);
            }
        });

        jLabel42.setText("Progreso de ejecución:");

        javax.swing.GroupLayout confParametrosLayout = new javax.swing.GroupLayout(confParametros);
        confParametros.setLayout(confParametrosLayout);
        confParametrosLayout.setHorizontalGroup(
            confParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(confParametrosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(confParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(confParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(executionProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(confParametrosLayout.createSequentialGroup()
                            .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                            .addGap(483, 483, 483)
                            .addComponent(restoreButton, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(confParametrosLayout.createSequentialGroup()
                            .addComponent(backParametersButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(executeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, confParametrosLayout.createSequentialGroup()
                            .addGroup(confParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(clientFactorsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(graspVariables, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        confParametrosLayout.setVerticalGroup(
            confParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, confParametrosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(confParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(restoreButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(confParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(confParametrosLayout.createSequentialGroup()
                        .addComponent(clientFactorsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(graspVariables, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel42)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(executionProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(confParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(executeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backParametersButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        ventanaContenedora.add(confParametros, "confParametros");

        resultadosPiezas.setBackground(new java.awt.Color(255, 255, 255));

        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(0, 51, 153));
        jLabel43.setText("Resultados");

        setsAtendidosRadioButton.setBackground(new java.awt.Color(255, 255, 255));
        vistaResultados.add(setsAtendidosRadioButton);
        setsAtendidosRadioButton.setText("Sets atendidos");
        setsAtendidosRadioButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                setsAtendidosRadioButtonStateChanged(evt);
            }
        });

        piezasRadioButton.setBackground(new java.awt.Color(255, 255, 255));
        vistaResultados.add(piezasRadioButton);
        piezasRadioButton.setSelected(true);
        piezasRadioButton.setText("Piezas asignadas");
        piezasRadioButton.setToolTipText("");
        piezasRadioButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                piezasRadioButtonStateChanged(evt);
            }
        });

        jLabel44.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel44.setText("Tipo de vista:");

        resultadosBackButton.setText("Regresar");
        resultadosBackButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resultadosBackButtonMouseClicked(evt);
            }
        });

        panelTablas.setBackground(new java.awt.Color(255, 255, 255));
        panelTablas.setLayout(new java.awt.CardLayout());

        resultPiezasAtendPanel.setBackground(new java.awt.Color(255, 255, 255));

        jPanel23.setBackground(new java.awt.Color(255, 255, 255));
        jPanel23.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "MEMÉTICO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        solucionMemeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        solucionMemeTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        solucionMemeTable.setEnabled(false);
        solucionMemeTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane6.setViewportView(solucionMemeTable);

        jPanel24.setBackground(new java.awt.Color(255, 255, 255));

        jLabel59.setText("Valor fitness");

        jLabel60.setText("Volumen cargado (m3)");

        jLabel61.setText("Peso cargado (kg)");

        fitMemePiezasField.setEditable(false);
        fitMemePiezasField.setBackground(new java.awt.Color(255, 255, 255));
        fitMemePiezasField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        fitMemePiezasField.setDisabledTextColor(new java.awt.Color(0, 51, 51));
        fitMemePiezasField.setEnabled(false);

        volumeMemePiezas.setEditable(false);
        volumeMemePiezas.setBackground(new java.awt.Color(255, 255, 255));
        volumeMemePiezas.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        volumeMemePiezas.setDisabledTextColor(new java.awt.Color(0, 51, 51));
        volumeMemePiezas.setEnabled(false);

        weightMemePiezas.setEditable(false);
        weightMemePiezas.setBackground(new java.awt.Color(255, 255, 255));
        weightMemePiezas.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        weightMemePiezas.setDisabledTextColor(new java.awt.Color(0, 51, 51));
        weightMemePiezas.setEnabled(false);

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addComponent(jLabel59)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                        .addComponent(fitMemePiezasField, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel24Layout.createSequentialGroup()
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel60)
                            .addComponent(jLabel61))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(weightMemePiezas, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                            .addComponent(volumeMemePiezas))))
                .addContainerGap())
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel59)
                    .addComponent(fitMemePiezasField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel60)
                    .addComponent(volumeMemePiezas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel61)
                    .addComponent(weightMemePiezas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addGap(142, 142, 142)
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel25.setBackground(new java.awt.Color(255, 255, 255));
        jPanel25.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "GENÉTICO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        solucionGenTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        solucionGenTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        solucionGenTable.setEnabled(false);
        solucionGenTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane7.setViewportView(solucionGenTable);

        jPanel26.setBackground(new java.awt.Color(255, 255, 255));

        jLabel62.setText("Valor fitness");

        jLabel63.setText("Volumen cargado (m3)");

        jLabel64.setText("Peso cargado (kg)");

        fitGenPiezasText.setEditable(false);
        fitGenPiezasText.setBackground(new java.awt.Color(255, 255, 255));
        fitGenPiezasText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        fitGenPiezasText.setDisabledTextColor(new java.awt.Color(0, 51, 51));
        fitGenPiezasText.setEnabled(false);

        volumeGenPiezas.setEditable(false);
        volumeGenPiezas.setBackground(new java.awt.Color(255, 255, 255));
        volumeGenPiezas.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        volumeGenPiezas.setDisabledTextColor(new java.awt.Color(0, 51, 51));
        volumeGenPiezas.setEnabled(false);

        weightGenPiezas.setEditable(false);
        weightGenPiezas.setBackground(new java.awt.Color(255, 255, 255));
        weightGenPiezas.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        weightGenPiezas.setDisabledTextColor(new java.awt.Color(0, 51, 51));
        weightGenPiezas.setEnabled(false);

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel26Layout.createSequentialGroup()
                        .addComponent(jLabel62)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                        .addComponent(fitGenPiezasText, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel26Layout.createSequentialGroup()
                        .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel63)
                            .addComponent(jLabel64))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(weightGenPiezas, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                            .addComponent(volumeGenPiezas))))
                .addContainerGap())
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel62)
                    .addComponent(fitGenPiezasText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel63)
                    .addComponent(volumeGenPiezas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel64)
                    .addComponent(weightGenPiezas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel25Layout.createSequentialGroup()
                .addContainerGap(142, Short.MAX_VALUE)
                .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(124, 124, 124))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7)
                .addContainerGap())
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout resultPiezasAtendPanelLayout = new javax.swing.GroupLayout(resultPiezasAtendPanel);
        resultPiezasAtendPanel.setLayout(resultPiezasAtendPanelLayout);
        resultPiezasAtendPanelLayout.setHorizontalGroup(
            resultPiezasAtendPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultPiezasAtendPanelLayout.createSequentialGroup()
                .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        resultPiezasAtendPanelLayout.setVerticalGroup(
            resultPiezasAtendPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultPiezasAtendPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(resultPiezasAtendPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );

        panelTablas.add(resultPiezasAtendPanel, "resultPiezasAtendPanel");

        resultSetAtendidosPanel.setBackground(new java.awt.Color(255, 255, 255));

        jPanel27.setBackground(new java.awt.Color(255, 255, 255));
        jPanel27.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "MEMÉTICO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));

        piezasMAtendTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Tipo", "Modelo", "Color", "Cant. horneada"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        piezasMAtendTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(piezasMAtendTable);
        if (piezasMAtendTable.getColumnModel().getColumnCount() > 0) {
            piezasMAtendTable.getColumnModel().getColumn(0).setMinWidth(15);
            piezasMAtendTable.getColumnModel().getColumn(0).setPreferredWidth(15);
        }

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Piezas", jPanel15);

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));

        productosMAtendTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Tipo", "Modelo", "Color", "Cant. completada"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        productosMAtendTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(productosMAtendTable);
        if (productosMAtendTable.getColumnModel().getColumnCount() > 0) {
            productosMAtendTable.getColumnModel().getColumn(0).setMinWidth(15);
            productosMAtendTable.getColumnModel().getColumn(0).setPreferredWidth(15);
        }

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Productos", jPanel16);

        jPanel17.setBackground(new java.awt.Color(255, 255, 255));

        setsMAtendTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Modelo", "Color", "Cant. completada"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(setsMAtendTable);
        if (setsMAtendTable.getColumnModel().getColumnCount() > 0) {
            setsMAtendTable.getColumnModel().getColumn(0).setMinWidth(15);
            setsMAtendTable.getColumnModel().getColumn(0).setPreferredWidth(15);
        }

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Sets", jPanel17);

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );

        jPanel29.setBackground(new java.awt.Color(255, 255, 255));
        jPanel29.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "GENÉTICO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jPanel18.setBackground(new java.awt.Color(255, 255, 255));

        piezasGAtendTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Tipo", "Modelo", "Color", "Cant. horneada"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(piezasGAtendTable);
        if (piezasGAtendTable.getColumnModel().getColumnCount() > 0) {
            piezasGAtendTable.getColumnModel().getColumn(0).setMinWidth(15);
            piezasGAtendTable.getColumnModel().getColumn(0).setPreferredWidth(15);
        }

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
        );

        jTabbedPane3.addTab("Piezas", jPanel18);

        jPanel19.setBackground(new java.awt.Color(255, 255, 255));

        productosGAtendTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Tipo", "Modelo", "Color", "Cant. completada"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(productosGAtendTable);
        if (productosGAtendTable.getColumnModel().getColumnCount() > 0) {
            productosGAtendTable.getColumnModel().getColumn(0).setMinWidth(15);
            productosGAtendTable.getColumnModel().getColumn(0).setPreferredWidth(15);
        }

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
        );

        jTabbedPane3.addTab("Productos", jPanel19);

        jPanel20.setBackground(new java.awt.Color(255, 255, 255));

        setsGAtendTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Modelo", "Color", "Cant. completada"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(setsGAtendTable);
        if (setsGAtendTable.getColumnModel().getColumnCount() > 0) {
            setsGAtendTable.getColumnModel().getColumn(0).setMinWidth(15);
            setsGAtendTable.getColumnModel().getColumn(0).setPreferredWidth(15);
        }

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
        );

        jTabbedPane3.addTab("Sets", jPanel20);

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane3)
                .addContainerGap())
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addComponent(jTabbedPane3)
                .addContainerGap())
        );

        javax.swing.GroupLayout resultSetAtendidosPanelLayout = new javax.swing.GroupLayout(resultSetAtendidosPanel);
        resultSetAtendidosPanel.setLayout(resultSetAtendidosPanelLayout);
        resultSetAtendidosPanelLayout.setHorizontalGroup(
            resultSetAtendidosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultSetAtendidosPanelLayout.createSequentialGroup()
                .addComponent(jPanel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        resultSetAtendidosPanelLayout.setVerticalGroup(
            resultSetAtendidosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultSetAtendidosPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(resultSetAtendidosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );

        panelTablas.add(resultSetAtendidosPanel, "resultSetAtendidosPanel");

        javax.swing.GroupLayout resultadosPiezasLayout = new javax.swing.GroupLayout(resultadosPiezas);
        resultadosPiezas.setLayout(resultadosPiezasLayout);
        resultadosPiezasLayout.setHorizontalGroup(
            resultadosPiezasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultadosPiezasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(resultadosPiezasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(resultadosPiezasLayout.createSequentialGroup()
                        .addComponent(jLabel43)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel44)
                        .addGap(26, 26, 26)
                        .addComponent(piezasRadioButton)
                        .addGap(18, 18, 18)
                        .addComponent(setsAtendidosRadioButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultadosPiezasLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(resultadosBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(resultadosPiezasLayout.createSequentialGroup()
                        .addComponent(panelTablas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        resultadosPiezasLayout.setVerticalGroup(
            resultadosPiezasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultadosPiezasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(resultadosPiezasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43)
                    .addComponent(setsAtendidosRadioButton)
                    .addComponent(piezasRadioButton)
                    .addComponent(jLabel44))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelTablas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(resultadosBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        ventanaContenedora.add(resultadosPiezas, "resultadosPiezas");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ventanaContenedora, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ventanaContenedora, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startButtonActionPerformed

    private void cargarDatosPan(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cargarDatosPan
        // TODO add your handling code here:       
        CardLayout card = (CardLayout) ventanaContenedora.getLayout();
        card.show(ventanaContenedora, "cargarDatos");
    }//GEN-LAST:event_cargarDatosPan

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        CardLayout card = (CardLayout) ventanaContenedora.getLayout();
        card.show(ventanaContenedora, "inicio");
    }//GEN-LAST:event_jButton2MouseClicked

    private void nextCargaButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextCargaButtonMouseClicked
        // TODO add your handling code here:
        if (datosHorno && datosSets && datosPedidos) {
            CardLayout card = (CardLayout) ventanaContenedora.getLayout();
            card.show(ventanaContenedora, "confParametros");
        }
    }//GEN-LAST:event_nextCargaButtonMouseClicked

    private void backParametersButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backParametersButtonMouseClicked
        // TODO add your handling code here:
        CardLayout card = (CardLayout) ventanaContenedora.getLayout();
        card.show(ventanaContenedora, "cargarDatos");
    }//GEN-LAST:event_backParametersButtonMouseClicked
    private void colocarValoresParametros() {
        //Se asigna los valores especificados a los parametros
        //FACTORES CLIENTE
        Algoritmos.TIEMPO_MAXIMO = (int) maxTimeSpinner.getValue();
        if (equalFactorsCheckBox.isSelected()) {
            double valor = 1.0 / 3.0;
            Solucion.COEF_DEMANDA = valor;
            Solucion.COEF_PESO = valor;
            Solucion.COEF_VOLUMEN = valor;

            //-------------------------------------------------------------PENDIENTE
            SolucionMeme.COEF_DEMANDA = valor;
            SolucionMeme.COEF_PESO = valor;
            SolucionMeme.COEF_VOLUMEN = valor;
        } else {
            Solucion.COEF_DEMANDA = (double) demandSpinner.getValue();
            Solucion.COEF_PESO = (double) weightSpinner.getValue();
            Solucion.COEF_VOLUMEN = (double) volumeSpinner.getValue();

            //-------------------------------------------------------------PENDIENTE
            SolucionMeme.COEF_DEMANDA = (double) demandSpinner.getValue();
            SolucionMeme.COEF_PESO = (double) weightSpinner.getValue();
            SolucionMeme.COEF_VOLUMEN = (double) volumeSpinner.getValue();
        }
        //GRASP-----------------------------------------------------------------
        Algoritmos.ALF_INICIAL = (double) alphaGraspSpinner.getValue();
        Algoritmos.TAM_INICIAL = (int) pobSizeGraspSpinner.getValue();

        //MEMETICO--------------------------------------------------------------
        //Generacion de una nueva poblacion
        Memetico.T_RECOMBINACION = (double) tasaRecombSpinner.getValue();
        Memetico.PROBABILIDAD_UC = (double) probRecombSpinner.getValue();
        Memetico.T_MUTACION = (double) tasaMutSpinner.getValue();

        //Busqueda local
        Memetico.GEN_INTERVALO_LS = (int) intervalGenSpinner.getValue();
        Memetico.PORC_LS = (double) porcAplicationSpinner.getValue();
        Memetico.VECINOS_LS = (int) neighboursVisitSpinner.getValue();

        //Restauracion de la poblacion
        Memetico.MAX_SIN_MEJORA = (int) maxSinMejoraSpinner.getValue();
        Memetico.PORC_PRESERVAR = (double) porcConservarSpinner.getValue();

        //Condiciones de parada
        Memetico.MAX_GENERACIONES = (int) maxIterationSpinner.getValue();

        //GENETICO--------------------------------------------------------------
        //Casamiento
        Genetico.TASA_CASAMIENTO = (double) tCasamientoSpinner.getValue();
        Genetico.PROBABILIDAD_UC = (double) pRecombGSpinner.getValue();

        //Mutacion
        Genetico.TASA_MUTACION = (double) tMutacionGSpinner.getValue();

        //Depuracion de la poblacion
        Genetico.PORC_PRESERVAR = (double) porcConservarGSpinner.getValue();

        //Condiciones de parada
        Genetico.MAX_ITERACIONES = (int) maxIterationsGSpinner.getValue();
        Genetico.MAX_SIN_MEJORA = (int) maxIteratNoChangeSpinner.getValue();

    }

    private void mostrarSoluciones() {
        fitMemePiezasField.setText(String.format("%.4f", alg.mejorMeme.getFitness()));
        fitGenPiezasText.setText(String.format("%.4f", alg.mejorGen.getFitness()));

        double volumenM = 0;
        double pesoM = 0;
        double volumenG = 0;
        double pesoG = 0;

        //Limpiando las tablas
        DefaultTableModel modelMemePieza = (DefaultTableModel) solucionMemeTable.getModel();
        modelMemePieza.setRowCount(0);
        modelMemePieza.setColumnCount(0);

        DefaultTableModel modelGenPieza = (DefaultTableModel) solucionGenTable.getModel();
        modelGenPieza.setRowCount(0);
        modelGenPieza.setColumnCount(0);

        SolucionMeme mejorMeme = alg.mejorMeme;
        int[][] arregloPiezasMeme = mejorMeme.arregloPiezas;
        SolucionG mejorGen = alg.mejorGen;
        
        Integer[] indCompartimento=new Integer[Vagoneta.nCompartimentos];
        for(int i=0;i<Vagoneta.nCompartimentos;i++){
            indCompartimento[i]=i+1;
        }
        modelMemePieza.addColumn("Id Comp.", indCompartimento);
        modelGenPieza.addColumn("Id Comp.", indCompartimento);
        for (int i = 0; i < (Horno.nVagonetas); i++) {
            //Calculando el peso y volumen cargado
            volumenM += mejorMeme.getVolV(i);
            pesoM += mejorMeme.getPesoV(i);
            volumenG += mejorGen.getVolV(i);
            pesoG += mejorGen.getPesoV(i);

            //Llenando la tabla con la solucion Memetico
            Integer[] datosVagonM = IntStream.of(arregloPiezasMeme[i]).boxed().toArray(Integer[]::new);
            modelMemePieza.addColumn("Vagon " + (i + 1), datosVagonM);

            //Llenando la tabla con la solucion Genetico
            Integer[] datosVagonG = mejorGen.getPiezasVagon(i);
            modelGenPieza.addColumn("Vagon " + (i + 1), datosVagonG);
        }
        volumeMemePiezas.setText(String.format("%.4f", volumenM));
        weightMemePiezas.setText(String.format("%.4f", pesoM));

        volumeGenPiezas.setText(String.format("%.4f", volumenG));
        weightGenPiezas.setText(String.format("%.4f", pesoG));
    }

    private void mostrarAtendidos() {
        //Limpiando las tablas del memetico
        DefaultTableModel modelMPiezaAtend = (DefaultTableModel) piezasMAtendTable.getModel();
        modelMPiezaAtend.setRowCount(0);
        DefaultTableModel modelMProdAtend = (DefaultTableModel) productosMAtendTable.getModel();
        modelMProdAtend.setRowCount(0);
        DefaultTableModel modelMSetAtend = (DefaultTableModel) setsMAtendTable.getModel();
        modelMSetAtend.setRowCount(0);

        //Limpiando las tablas del genetico
        DefaultTableModel modelGPiezaAtend = (DefaultTableModel) piezasGAtendTable.getModel();
        modelGPiezaAtend.setRowCount(0);
        DefaultTableModel modelGProdAtend = (DefaultTableModel) productosGAtendTable.getModel();
        modelGProdAtend.setRowCount(0);
        DefaultTableModel modelGSetAtend = (DefaultTableModel) setsGAtendTable.getModel();
        modelGSetAtend.setRowCount(0);

        SolucionMeme mejorMeme = alg.mejorMeme;
        SolucionG mejorGen = alg.mejorGen;
        //Llenando la cantidad de piezas seleccionadas
        for (int i = 0; i < GestorPiezas.cantidadPiezas; i++) {
            int cantMeme=mejorMeme.getCantColocada(i);
            int cantGen=mejorGen.getCantColocada(i);
            if ((cantMeme > 0)||(cantGen>0)) {
                //id, modelo, color, lista productos,stock
                Pieza actual = alg.gPiezas.getPieza(i);
                String[] descripcion = actual.getDescripcion();
                if(cantMeme>0)
                    modelMPiezaAtend.addRow(new Object[]{actual.getId(), descripcion[0],
                        descripcion[1], descripcion[2],cantMeme});
                if(cantGen>0)
                    modelGPiezaAtend.addRow(new Object[]{actual.getId(), descripcion[0],
                        descripcion[1], descripcion[2],cantGen});
            }
        }
        //Llenando la cantidad de productos seleccionados
        int[] nuevoStockProdM=new int[alg.gProd.lProd.length];
        int[] nuevoStockProdG=new int[alg.gProd.lProd.length];
        int indProd=0;
        for (Producto actualProd:alg.gProd.lProd){
            nuevoStockProdM[indProd]=Integer.MAX_VALUE;
            nuevoStockProdG[indProd]=Integer.MAX_VALUE;
            for(int idPieza:actualProd.lPiezas){
                //Se calcula el productosCompletados=piezasAlmacen+stockHorneado;
                int cantidadActualM=alg.gPiezas.stock(idPieza-1)+mejorMeme.getCantColocada(idPieza-1);
                if(cantidadActualM<nuevoStockProdM[indProd]) nuevoStockProdM[indProd]=cantidadActualM;
                int cantidadActualG=alg.gPiezas.stock(idPieza-1)+mejorGen.getCantColocada(idPieza-1);
                if(cantidadActualG<nuevoStockProdG[indProd]) nuevoStockProdG[indProd]=cantidadActualG;
            }
            if(nuevoStockProdM[indProd]==Integer.MAX_VALUE) nuevoStockProdM[indProd]=0;
            if(nuevoStockProdG[indProd]==Integer.MAX_VALUE) nuevoStockProdG[indProd]=0;
            String[] descripcion=actualProd.getDescripcion();
            if(nuevoStockProdM[indProd]>0){
                modelMProdAtend.addRow(new Object[]{actualProd.id,descripcion[0],
                    descripcion[1],descripcion[2],nuevoStockProdM[indProd]});                
            }
            if(nuevoStockProdG[indProd]>0){
                modelGProdAtend.addRow(new Object[]{actualProd.id,descripcion[0],
                    descripcion[1],descripcion[2],nuevoStockProdG[indProd]});
            }
            nuevoStockProdM[indProd]+=alg.gProd.stock(indProd);
            nuevoStockProdG[indProd]+=alg.gProd.stock(indProd);
            indProd++;
        }
        
        //Llenando las tablas de sets
        for(Set actualSet:alg.gSets.lSets){
            int nuevoStockM=Integer.MAX_VALUE;
            int nuevoStockG=Integer.MAX_VALUE;
            for(int idProducto:actualSet.lProductos){
                int cantidadActualM=nuevoStockProdM[idProducto-1];
                if(cantidadActualM<nuevoStockM) nuevoStockM=cantidadActualM;
                int cantidadActualG=nuevoStockProdG[idProducto-1];
                if(cantidadActualG<nuevoStockG) nuevoStockG=cantidadActualG;
            }
            if(nuevoStockM==Integer.MAX_VALUE) nuevoStockM=0;
            if(nuevoStockG==Integer.MAX_VALUE) nuevoStockG=0;
            if(nuevoStockM>0){
                modelMSetAtend.addRow(new Object[]{actualSet.id,actualSet.modelo,
                    actualSet.color,nuevoStockM});
            }   
            if(nuevoStockG>0){
                modelGSetAtend.addRow(new Object[]{actualSet.id,actualSet.modelo,
                    actualSet.color,nuevoStockG});
            }
        }
    }
    private void activarElementos(boolean estado){
        //Activa o desactiva botones
        backParametersButton.setEnabled(estado);
        restoreButton.setEnabled(estado);
        executeButton.setEnabled(estado);
        
        //Factores de cliente
        maxTimeSpinner.setEnabled(estado);
        equalFactorsCheckBox.setEnabled(estado);
        if(!equalFactorsCheckBox.isSelected()){
            demandSpinner.setEnabled(estado);
            weightSpinner.setEnabled(estado);
            volumeSpinner.setEnabled(estado);
        }
        //Grasp
        pobSizeGraspSpinner.setEnabled(estado);
        alphaGraspSpinner.setEnabled(estado);
        //Memetico
        tasaRecombSpinner.setEnabled(estado);
        probRecombSpinner.setEnabled(estado);
        tasaMutSpinner.setEnabled(estado);
        intervalGenSpinner.setEnabled(estado);
        porcAplicationSpinner.setEnabled(estado);
        neighboursVisitSpinner.setEnabled(estado);
        maxSinMejoraSpinner.setEnabled(estado);
        porcConservarSpinner.setEnabled(estado);
        maxIterationSpinner.setEnabled(estado);
        //Genetico
        tCasamientoSpinner.setEnabled(estado);
        pRecombGSpinner.setEnabled(estado);
        tMutacionGSpinner.setEnabled(estado);
        porcConservarGSpinner.setEnabled(estado);
        maxIterationsGSpinner.setEnabled(estado);
        maxIteratNoChangeSpinner.setEnabled(estado);
    }
    private void executeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_executeButtonMouseClicked
        // TODO add your handling code here:
        double peso = (double) weightSpinner.getValue();
        double volumen = (double) volumeSpinner.getValue();
        double demanda = (double) demandSpinner.getValue();
        if (equalFactorsCheckBox.isSelected() || ((peso + volumen + demanda) == 1)) {
            executionProgressBar.setValue(0);
            colocarValoresParametros();
            activarElementos(false);
            SwingWorker work=alg.createWorker(executionProgressBar);
            work.execute();
        } else {
            mostrarMensaje(-3);
        }
    }//GEN-LAST:event_executeButtonMouseClicked

    private void setsAtendidosRadioButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_setsAtendidosRadioButtonStateChanged
        // TODO add your handling code here:
        if (setsAtendidosRadioButton.isSelected()) {
            CardLayout card = (CardLayout) panelTablas.getLayout();
            card.show(panelTablas, "resultSetAtendidosPanel");
        }
    }//GEN-LAST:event_setsAtendidosRadioButtonStateChanged

    private void piezasRadioButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_piezasRadioButtonStateChanged
        // TODO add your handling code here:

        if (piezasRadioButton.isSelected()) {
            CardLayout card = (CardLayout) panelTablas.getLayout();
            card.show(panelTablas, "resultPiezasAtendPanel");
        }
    }//GEN-LAST:event_piezasRadioButtonStateChanged

    private void resultadosBackButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resultadosBackButtonMouseClicked
        // TODO add your handling code here:
        CardLayout card = (CardLayout) ventanaContenedora.getLayout();
        card.show(ventanaContenedora, "confParametros");
    }//GEN-LAST:event_resultadosBackButtonMouseClicked

    private void examinateFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_examinateFileMouseClicked
        // TODO add your handling code here:

        int returnVal = fc.showOpenDialog(OptimizarCargaVentana.this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            fileName.setText(file.getAbsolutePath());
            loadFileDataButton.setEnabled(true);
        } else {
            fileName.setText("");
        }
    }//GEN-LAST:event_examinateFileMouseClicked
    private void mostrarDatosHornoPestania() {
        maxVolume.setText(Double.toString(Horno.volMaximo));
        numberWagons.setText(Integer.toString(Horno.nVagonetas));
        maxWeight.setText(Double.toString(Vagoneta.pesoMaximo));
        numberCompartments.setText(Integer.toString(Vagoneta.nCompartimentos));

        //Limpiando la tabla de compartimentos
        DefaultTableModel model = (DefaultTableModel) compartmentsTable.getModel();
        model.setRowCount(0);

        //Llenando la tabla de compartimentos
        Compartimento[] listaComp = Vagoneta.lCompartimentos;
        for (Compartimento comp : listaComp) {
            model.addRow(new Object[]{comp.getId(), comp.ancho(), comp.largo(), comp.alto()});
        }
    }

    private void mostrarDatosSet() {

        //Limpiando las tablas de datos
        DefaultTableModel modelSet = (DefaultTableModel) setsTable.getModel();
        modelSet.setRowCount(0);
        DefaultTableModel modelProd = (DefaultTableModel) productosTable.getModel();
        modelProd.setRowCount(0);
        DefaultTableModel modelPieces = (DefaultTableModel) piecesTable.getModel();
        modelPieces.setRowCount(0);
        DefaultTableModel modelPedido = (DefaultTableModel) tablePedidos.getModel();
        modelPedido.setRowCount(0);

        //Llenando la tabla de sets
        Set[] listaSets = alg.gSets.lSets;
        for (Set setActual : listaSets) {
            int idActual = setActual.id;
            //id, modelo, color, lista productos,stock
            modelSet.addRow(new Object[]{idActual, setActual.modelo, setActual.color,
                setActual.cadenaListaProd(), alg.gSets.stock(idActual - 1)});

        }

        //Llenando la tabla de productos
        Producto[] listaProductos = alg.gProd.lProd;
        for (Producto prodActual : listaProductos) {
            int idActual = prodActual.id;
            String[] datosDescrip = prodActual.getDescripcion();
            //id, tipo, modelo, color, lista de piezas,stock
            modelProd.addRow(new Object[]{idActual, datosDescrip[0], datosDescrip[1], datosDescrip[2],
                prodActual.cadenaPiezas(), alg.gProd.stock(idActual - 1)});
        }

        //Llenando la tabla de piezas
        Pieza[] listaPiezas = alg.gPiezas.lPiezas;
        for (Pieza piezaActual : listaPiezas) {
            int idActual = piezaActual.getId();
            String[] datosDescrip = piezaActual.getDescripcion();
            //id, tipo,modelo,color,alto,ancho,largo,peso,stock,pendiente
            modelPieces.addRow(new Object[]{idActual, datosDescrip[0], datosDescrip[1],
                datosDescrip[2], piezaActual.getAlto(), piezaActual.getAncho(),
                piezaActual.getLargo(), piezaActual.getPeso(), alg.gPiezas.stock(idActual - 1),
                alg.gPiezas.pendientes(idActual - 1)});
        }
    }

    private void mostrarDatosPedidos() {
        //Limpiando la tabla de pedidos
        DefaultTableModel modelPedidos = (DefaultTableModel) tablePedidos.getModel();
        modelPedidos.setRowCount(0);
        //Llenando la tabla de pedidos
        List<Pedido> listaPedidos = alg.lPedidos;
        for (Pedido pedActual : listaPedidos) {
            //id,set pedido,prioridad cliente,fecha de entrega, cantidad
            modelPedidos.addRow(new Object[]{pedActual.idPedido(), pedActual.idSetPedido(),
                pedActual.priorCliente(), pedActual.fechaEntrega(), pedActual.cantidad()});
        }

    }

    private void mostrarMensaje(int resultado) {
        String mensaje;
        String titulo = "Alerta";
        switch (resultado) {
            case 1:
                mensaje = "Se cargo el archivo exitosamente.";
                titulo = "Carga exitosa";
                if (!datosHorno || !datosSets || !datosPedidos) {
                    mensaje = mensaje + "\nPendiente por cargar: ";
                    String pendientes = "";
                    if (!datosHorno) {
                        pendientes = "Horno";
                    }
                    if (!datosSets) {
                        if (pendientes.length() > 0) {
                            pendientes = pendientes + ", ";
                        }
                        pendientes = pendientes + "Sets/Productos/Piezas";
                    }
                    if (!datosPedidos) {
                        if (pendientes.length() > 0) {
                            pendientes = pendientes + ", ";
                        }
                        pendientes = pendientes + "Pedidos";
                    }
                    mensaje = mensaje + pendientes;
                }
                break;
            case -1:
                mensaje = "No se pudo abrir el archivo";
                break;
            case -2:
                mensaje = "El archivo no tiene el formato correcto";
                break;
            default:
                mensaje = "Los factores de priorización deben sumar 1";
                break;
        }
        JOptionPane.showMessageDialog(rootPane, mensaje,
                titulo, JOptionPane.INFORMATION_MESSAGE);
    }
    private void loadFileDataButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadFileDataButtonMouseClicked
        // TODO add your handling code here:
        if (typeOvenRadioButton.isSelected()) {
            int resultado = alg.datosHorno(fileName.getText());
            datosHorno = (resultado == 1);
            if (datosHorno) {
                mostrarDatosHornoPestania();
            }
            mostrarMensaje(resultado);

        } else if (typeSetsRadioButton.isSelected()) {
            int resultado = alg.cargarDatos(fileName.getText());
            datosSets = (resultado == 1);
            if (datosSets) {
                typePedidosRadioButton.setEnabled(datosSets);
                datosPedidos = false;
                mostrarDatosSet();
            }
            mostrarMensaje(resultado);
        } else if (typePedidosRadioButton.isSelected()) {
            int resultado = alg.cargarPedidos(fileName.getText());
            datosPedidos = (resultado == 1);
            if (datosPedidos) {
                mostrarDatosPedidos();
            }
            mostrarMensaje(resultado);
        }
        loadFileDataButton.setEnabled(false);
        fileName.setText("");
        //Verifica que todos los archivos se hayan cargado antes de pasar a la 
        //siguiente etapa
        if (datosHorno && datosSets && datosPedidos) {
            nextCargaButton.setEnabled(true);
        } else {
            nextCargaButton.setEnabled(false);
        }
    }//GEN-LAST:event_loadFileDataButtonMouseClicked

    private void restoreButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_restoreButtonMouseClicked

        //Boton que regresa todos los campos a su valor predeterminado
        //Factores cliente
        equalFactorsCheckBox.setSelected(true);
        /*double factor=1.0/3.0;
        demandSpinner.setValue(factor);
        weightSpinner.setValue(factor);
        volumeSpinner.setValue(factor);*/
        maxTimeSpinner.setValue(5); //                  Tiempo maximo de ejecucion

        //Parametros del GRASP--------------------------------------------------
        pobSizeGraspSpinner.setValue(7500); //          Tamaño de la poblacion
        alphaGraspSpinner.setValue(0.4); //             Alfa

        //Parametros del Memetico-----------------------------------------------
        //-*Generacion de una nueva poblacion
        tasaRecombSpinner.setValue(0.65); //            Tasa de recombinacion
        probRecombSpinner.setValue(0.7); //             Probabilidad usada en la recombinacion uniforme
        tasaMutSpinner.setValue(0.06); //               Tasa de mutacion        
        //-*Busqueda local
        intervalGenSpinner.setValue(1); //              Intervalo de generaciones
        porcAplicationSpinner.setValue(0.05);//         Porcentaje de aplicacion
        neighboursVisitSpinner.setValue(100);//         Vecinos visitados x busqueda        
        //-*Restauracion de la poblacion
        maxSinMejoraSpinner.setValue(500);//            Maximo de iteraciones sin mejora
        porcConservarSpinner.setValue(0.07);//          Porcentaje de soluciones a conservar        
        //-*Condiciones de parada
        maxIterationSpinner.setValue(1000);//           Maximo numero de iteraciones

        //Parametros del Genetico-----------------------------------------------
        //-*Casamiento
        tCasamientoSpinner.setValue(0.65);//            Tasa de casamiento
        pRecombGSpinner.setValue(0.7);//                Probabilidad usada en la recombinacion uniforme
        //-*Mutacion
        tMutacionGSpinner.setValue(0.07);//             Tasa de mutacion
        //-*Depuracion de la poblacion
        porcConservarGSpinner.setValue(0.1);//          Porcentaje de soluciones a conservar
        //-*Condiciones de parada
        maxIterationsGSpinner.setValue(1000);//         Maximo numero de iteraciones
        maxIteratNoChangeSpinner.setValue(500);//       Maximo de iteraciones sin mejora
    }//GEN-LAST:event_restoreButtonMouseClicked

    private void equalFactorsCheckBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_equalFactorsCheckBoxStateChanged
        // TODO add your handling code here:
        if (equalFactorsCheckBox.isSelected()) {
            double factor = 1.0 / 3.0;
            //Colocar el valor en los spinners
            demandSpinner.setValue(factor);
            weightSpinner.setValue(factor);
            volumeSpinner.setValue(factor);
            //Bloquear los spinners
            demandSpinner.setEnabled(false);
            weightSpinner.setEnabled(false);
            volumeSpinner.setEnabled(false);
        } else {
            //demandSpinner.setValue(0.4);
            //weightSpinner.setValue(0.3);
            //volumeSpinner.setValue(0.3);
            //Desbloquear los spinners
            demandSpinner.setEnabled(true);
            weightSpinner.setEnabled(true);
            volumeSpinner.setEnabled(true);
        }
    }//GEN-LAST:event_equalFactorsCheckBoxStateChanged

    private void executionProgressBarStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_executionProgressBarStateChanged
        // TODO add your handling code here:
        if(executionProgressBar.getValue()==100){
            mostrarSoluciones();
            mostrarAtendidos();
            activarElementos(true);
            CardLayout card = (CardLayout) ventanaContenedora.getLayout();
            card.show(ventanaContenedora, "resultadosPiezas");
            executionProgressBar.setValue(0);
        }
    }//GEN-LAST:event_executionProgressBarStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OptimizarCargaVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OptimizarCargaVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OptimizarCargaVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OptimizarCargaVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OptimizarCargaVentana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Pasos;
    private javax.swing.JPanel TituloInicio;
    private javax.swing.JSpinner alphaGraspSpinner;
    private javax.swing.JButton backParametersButton;
    private javax.swing.JPanel cargarDatos;
    private javax.swing.JPanel clientFactorsPanel;
    private javax.swing.JTable compartmentsTable;
    private javax.swing.JPanel confParametros;
    private javax.swing.JLabel demandLabel;
    private javax.swing.JSpinner demandSpinner;
    private javax.swing.JCheckBox equalFactorsCheckBox;
    private javax.swing.JButton examinateFile;
    private javax.swing.JButton executeButton;
    private javax.swing.JProgressBar executionProgressBar;
    private javax.swing.JTextField fileName;
    private javax.swing.JTextField fitGenPiezasText;
    private javax.swing.JTextField fitMemePiezasField;
    private javax.swing.JPanel graspVariables;
    private javax.swing.JPanel inicio;
    private javax.swing.JSpinner intervalGenSpinner;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JButton loadFileDataButton;
    private javax.swing.JSpinner maxIteratNoChangeSpinner;
    private javax.swing.JSpinner maxIterationSpinner;
    private javax.swing.JSpinner maxIterationsGSpinner;
    private javax.swing.JLabel maxSinMejoraLabel;
    private javax.swing.JSpinner maxSinMejoraSpinner;
    private javax.swing.JSpinner maxTimeSpinner;
    private javax.swing.JTextField maxVolume;
    private javax.swing.JTextField maxWeight;
    private javax.swing.JSpinner neighboursVisitSpinner;
    private javax.swing.JButton nextCargaButton;
    private javax.swing.JTextField numberCompartments;
    private javax.swing.JTextField numberWagons;
    private javax.swing.JLabel pRecombGLabel;
    private javax.swing.JSpinner pRecombGSpinner;
    private javax.swing.JPanel panelDatHornos;
    private javax.swing.JPanel panelDatPiezas;
    private javax.swing.JPanel panelDatProds;
    private javax.swing.JPanel panelDatSets;
    private javax.swing.JPanel panelTablas;
    private javax.swing.JTable piecesTable;
    private javax.swing.JTable piezasGAtendTable;
    private javax.swing.JTable piezasMAtendTable;
    private javax.swing.JRadioButton piezasRadioButton;
    private javax.swing.JSpinner pobSizeGraspSpinner;
    private javax.swing.JSpinner porcAplicationSpinner;
    private javax.swing.JSpinner porcConservarGSpinner;
    private javax.swing.JLabel porcConservarLabel;
    private javax.swing.JSpinner porcConservarSpinner;
    private javax.swing.JLabel probRecombLabel;
    private javax.swing.JSpinner probRecombSpinner;
    private javax.swing.JTable productosGAtendTable;
    private javax.swing.JTable productosMAtendTable;
    private javax.swing.JTable productosTable;
    private javax.swing.JButton restoreButton;
    private javax.swing.JPanel resultPiezasAtendPanel;
    private javax.swing.JPanel resultSetAtendidosPanel;
    private javax.swing.JToggleButton resultadosBackButton;
    private javax.swing.JPanel resultadosPiezas;
    private javax.swing.JRadioButton setsAtendidosRadioButton;
    private javax.swing.JTable setsGAtendTable;
    private javax.swing.JTable setsMAtendTable;
    private javax.swing.JTable setsTable;
    private javax.swing.JTable solucionGenTable;
    private javax.swing.JTable solucionMemeTable;
    private javax.swing.JButton startButton;
    private javax.swing.JLabel tCasamientoLabel;
    private javax.swing.JSpinner tCasamientoSpinner;
    private javax.swing.JSpinner tMutacionGSpinner;
    private javax.swing.JScrollPane tableCompartments;
    private javax.swing.JTable tablePedidos;
    private javax.swing.JScrollPane tablePiezas;
    private javax.swing.JScrollPane tableProductos;
    private javax.swing.JScrollPane tableSets;
    private javax.swing.JLabel tasaMutLabel;
    private javax.swing.JSpinner tasaMutSpinner;
    private javax.swing.JLabel tasaRecombLabel;
    private javax.swing.JSpinner tasaRecombSpinner;
    private javax.swing.ButtonGroup tipoArchivo;
    private javax.swing.JRadioButton typeOvenRadioButton;
    private javax.swing.JRadioButton typePedidosRadioButton;
    private javax.swing.JRadioButton typeSetsRadioButton;
    private javax.swing.JPanel ventanaContenedora;
    private javax.swing.ButtonGroup vistaResultados;
    private javax.swing.ButtonGroup vistaSets;
    private javax.swing.JTextField volumeGenPiezas;
    private javax.swing.JLabel volumeLabel;
    private javax.swing.JTextField volumeMemePiezas;
    private javax.swing.JSpinner volumeSpinner;
    private javax.swing.JTextField weightGenPiezas;
    private javax.swing.JLabel weightLabel;
    private javax.swing.JTextField weightMemePiezas;
    private javax.swing.JSpinner weightSpinner;
    // End of variables declaration//GEN-END:variables
}
